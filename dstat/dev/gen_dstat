#!/bin/bash

declare TRACE
[[ "${TRACE}" == 1 ]] && set -o xtrace
set -o errexit
set -o pipefail
set -o noclobber

TIMER=600

DATA_TEE_DIR="dstat/data/tee/dstat"
DATA_CSV_DIR="dstat/data/csv/dstat"

PLOT_TEE_DIR="dstat/plot/tee/dstat"
PLOT_CSV_DIR="dstat/plot/csv/dstat"

mkdir_data() {
  mkdir dstat/plot/{tee,csv}/{dool,dstat}/{default,mod,mod_and_range,range,styles} -p
  mkdir dstat/data/{tee,csv}/{dool,dstat} -p
}

generate_data() {
  dstat --output "${DATA_CSV_DIR}"/cpu.csv --time --cpu 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/cpu.dstat &
  dstat --output "${DATA_CSV_DIR}"/disk.csv --time --disk 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/disk.dstat &
  dstat --output "${DATA_CSV_DIR}"/page.csv --time --page 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/page.dstat &
  dstat --output "${DATA_CSV_DIR}"/int.csv --time --int 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/int.dstat &
  dstat --output "${DATA_CSV_DIR}"/load.csv --time --load 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/load.dstat &
  dstat --output "${DATA_CSV_DIR}"/mem.csv --time --mem 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/mem.dstat &
  dstat --output "${DATA_CSV_DIR}"/net.csv --time --net 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/net.dstat &
  dstat --output "${DATA_CSV_DIR}"/proc.csv --time --proc 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/proc.dstat &
  dstat --output "${DATA_CSV_DIR}"/io.csv --time --io 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/io.dstat &
  dstat --output "${DATA_CSV_DIR}"/swap.csv --time --swap 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/swap.dstat &
  dstat --output "${DATA_CSV_DIR}"/sys.csv --time --sys 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/sys.dstat &
  dstat --output "${DATA_CSV_DIR}"/aio.csv --time --aio 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/aio.dstat &
  dstat --output "${DATA_CSV_DIR}"/fs.csv --time --fs 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/fs.dstat &
  dstat --output "${DATA_CSV_DIR}"/ipc.csv --time --ipc 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/ipc.dstat &
  dstat --output "${DATA_CSV_DIR}"/lock.csv --time --lock 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/lock.dstat &
  dstat --output "${DATA_CSV_DIR}"/raw.csv --time --raw 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/raw.dstat &
  dstat --output "${DATA_CSV_DIR}"/socket.csv --time --socket 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/socket.dstat &
  dstat --output "${DATA_CSV_DIR}"/tpc.csv --time --tcp 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/tpc.dstat &
  dstat --output "${DATA_CSV_DIR}"/udp.csv --time --udp 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/udp.dstat &
  dstat --output "${DATA_CSV_DIR}"/unix.csv --time --unix 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/unix.dstat &
  dstat --output "${DATA_CSV_DIR}"/vm.csv --time --vm 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/vm.dstat &
  dstat --output "${DATA_CSV_DIR}"/vm-adv.csv --time --vm-adv 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/vm-adv.dstat &
  dstat --output "${DATA_CSV_DIR}"/zones.csv --time --zones 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/zones.dstat &
  dstat \
    --output "${DATA_CSV_DIR}"/all.csv \
    --time \
    --cpu \
    --disk \
    --page \
    --int \
    --load \
    --mem \
    --net \
    --proc \
    --io \
    --swap \
    --sys \
    --aio \
    --fs \
    --ipc \
    --lock \
    --raw \
    --socket \
    --tcp \
    --udp \
    --unix \
    --vm \
    --vm-adv \
    --zones 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/all.dstat &
  dstat \
    --output "${DATA_CSV_DIR}"/all_with_default_time.csv \
    --cpu \
    --disk \
    --page \
    --int \
    --load \
    --mem \
    --net \
    --proc \
    --io \
    --swap \
    --sys \
    --aio \
    --fs \
    --ipc \
    --lock \
    --raw \
    --socket \
    --tcp \
    --udp \
    --unix \
    --vm \
    --vm-adv \
    --zones 1 "${TIMER}" | tee "${DATA_TEE_DIR}"/all_with_default_time.dstat
  sleep 5
}

generate_data_random() {
  local -a generate

  for i in $(seq 1 20); do
    echo "Random genetarion ${i}"
    dstat_cmd=$(
      echo -e --cpu --disk --page --int --load --mem --net --proc --io --swap --sys --aio --fs --ipc --lock --raw --socket --tcp --udp --unix --vm --vm-adv --zones --time |
        sd ' ' '\n' |
        shuf |
        head -n $(shuf -i 3-12 -n1) |
        sd '\n' ' ' |
        sd ' $' '\n' |
        sd '(.+)' 'dstat output $1 1 num' |
        sd 'num' "${TIMER}"
    )
    dstat_filename=$(
      echo "${dstat_cmd}" |
        sd ' ' '\n' |
        rg -- '--' |
        sd '\n' ' ' |
        sd -- '--' '' |
        sd ' $' '' |
        sd ' ' '_'
    )
    file_csv="${DATA_CSV_DIR}/${dstat_filename}.csv"
    file_tee="${DATA_TEE_DIR}/${dstat_filename}.dstat"
    dstat_cmd_with_output=$(echo "${dstat_cmd}" | sd -- "output" "--output ${file_csv}")
    generate+=("${dstat_cmd_with_output} | tee ${file_tee} &")
  done

  for c in "${generate[@]}"; do eval "${c}"; done
  sleep $(echo "${TIMER} + 10" | bc)
}

tee_plot_data() {
  # no flags
  for file in $(fd . -t f -e dstat); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_TEE_DIR}/default/${filename}.png"
    echo "no flags ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      -o "${png}"
  done

  # --x-range
  for file in $(fd . -t f -e dstat); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_TEE_DIR}/range/${filename}.png"
    echo "--x-range ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      -x40:60 \
      -o "${png}"
  done

  # --x-mod
  for file in $(fd . -t f -e dstat); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_TEE_DIR}/mod/${filename}.png"
    echo "--x-mod ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      --x-mod 2 \
      -o "${png}"
  done

  # --x-mod and --x-range
  for file in $(fd . -t f -e dstat); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_TEE_DIR}/mod_and_range/${filename}.png"
    echo "--x-mod and --x-range ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      --x-mod 2 \
      -x40:60 \
      -o "${png}"
  done

  # styles
  for file in $(fd . -t f -e dstat); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_TEE_DIR}/styles/${filename}.png"
    echo "styles ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      --color-bg "black" \
      --color-fg "white" \
      --font Arial \
      --font-scale 1.1 \
      --height 330 \
      --width 1500 \
      --line-width 2 \
      -o "${png}"
  done
}

csv_plot_data() {
  # no flags
  for file in $(fd . -t f -e csv "${DATA_CSV_DIR}"); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_CSV_DIR}/default/${filename}.png"
    echo "no flags ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      -o "${png}"
  done

  # --x-range
  for file in $(fd . -t f -e csv "${DATA_CSV_DIR}"); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_CSV_DIR}/range/${filename}.png"
    echo "--x-range ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      -x40:60 \
      -o "${png}"
  done

  # --x-mod
  for file in $(fd . -t f -e csv "${DATA_CSV_DIR}"); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_CSV_DIR}/mod/${filename}.png"
    echo "--x-mod ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      --x-mod 2 \
      -o "${png}"
  done

  # --x-mod and --x-range
  for file in $(fd . -t f -e csv "${DATA_CSV_DIR}"); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_CSV_DIR}/mod_and_range/${filename}.png"
    echo "--x-mod and --x-range ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      --x-mod 2 \
      -x40:60 \
      -o "${png}"
  done

  # styles
  for file in $(fd . -t f -e csv "${DATA_CSV_DIR}"); do
    local png
    filename=$(echo "${file}" | awk -F'/' '{print $NF}' | awk -F'.' '{print $1}')
    png="${PLOT_CSV_DIR}/styles/${filename}.png"
    echo "styles ${file} -> ${png}"
    pdstat "${file}" \
      -vtrue \
      -pfalse \
      --color-bg "black" \
      --color-fg "white" \
      --font Arial \
      --font-scale 1.1 \
      --height 330 \
      --width 1500 \
      --line-width 2 \
      -o "${png}"
  done
}

main() {
  mkdir_data
  # generate_data
  # generate_data_random

  tee_plot_data
  csv_plot_data
}

main
